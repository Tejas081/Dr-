#include <SPI.h>
#include <MFRC522.h>
#include <WiFi.h>
#include "ThingSpeak.h"
#include<HTTPClient.h>

unsigned long myChannelAPIKEY = 2448927;
const char * myWriteAPIKey = "IQEAICS2AZRPB7HD";

char ssid[] = "Tejas";   // your network SSID (name) 
char pass[] = "12345678";   // your network password
int keyIndex = 0;            
WiFiClient  client;

#define SS_p 5
#define RST_p 4
#define Buz 2 // connect the Buz to 2 pin
#define A_Delay 2000
#define D_Delay 1000
MFRC522 mfrc522(SS_p, RST_p); // Create MFRC522 instance.

void setup()
{
  Serial.begin(9600); // Initiate a serial communication
  while (!Serial) {
    ; // wait for serial port to connect. Needed for Leonardo native USB port only
  }
  
  WiFi.mode(WIFI_STA);   
  ThingSpeak.begin(client);

  SPI.begin(); // Initiate SPI bus
  mfrc522.PCD_Init(); // Initiate MFRC522
  pinMode(Buz, OUTPUT);
  noTone(Buz);
  Serial.println("Put your card to the reader for scanning â€¦");
  Serial.println();

}

static int x=-1;
static int y=-1;
static int z=-1;

void loop()
{
  if(WiFi.status() != WL_CONNECTED){
    Serial.print("Attempting to connect to SSID: ");
    while(WiFi.status() != WL_CONNECTED){
      WiFi.begin(ssid, pass); // Connect to WPA/WPA2 network. Change this line if using open or WEP network
      Serial.print(".");
      delay(5000);     
    } 
    Serial.println("\nConnected.");
  }

  // Look for new cards
  if ( ! mfrc522.PICC_IsNewCardPresent())
  {
    return;
  }// Select one of the cards
  if ( ! mfrc522.PICC_ReadCardSerial())
  {
    return;
  }
  //Show UID on serial monitor
  Serial.print("UID tag :");
  String content= "";
  byte letter;
  for (byte i = 0; i < mfrc522.uid.size; i++)
  {
    Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
    Serial.print(mfrc522.uid.uidByte[i], HEX);
    content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
    content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  Serial.println();
  Serial.print("Message : ");
  content.toUpperCase();
  if (content.substring(1) == "23 07 5C A1")
  {
    tone(Buz, 300);
    delay(D_Delay);
    noTone(Buz);
    if(x==1)
    {
      x=-1;
    }
    else
    {
      x=1;
    }
    	HTTPClient http;
        String url = "https://api.thingspeak.com/update?api_key=";
        url += myWriteAPIKey;
        url += "&field1=";
        url+=String(x);
        
        Serial.println("Sending HTTP GET request to: " + url);

        // Send GET request
        http.begin(url);

        int httpResponseCode = http.GET();

        if (httpResponseCode > 0)
        {
            Serial.print("HTTP Response code: ");
            Serial.println(httpResponseCode);
        }
        else
        {
            Serial.print("Error code: ");
            Serial.println(httpResponseCode);
        }

        // Free resources
        http.end();

    delay(500);
    delay(A_Delay);
  }

  else if (content.substring(1) == "AD 54 98 43")
  {
    tone(Buz, 300);
    delay(D_Delay);
    noTone(Buz);
    if(y==1)
    {
      y=-1;
    }
    else
    {
      y=1;
    }
    	HTTPClient http;
        String url = "https://api.thingspeak.com/update?api_key=";
        url += myWriteAPIKey;
        url += "&field2=";
        url+=String(y);
        
        Serial.println("Sending HTTP GET request to: " + url);

        // Send GET request
        http.begin(url);

        int httpResponseCode = http.GET();

        if (httpResponseCode > 0)
        {
            Serial.print("HTTP Response code: ");
            Serial.println(httpResponseCode);
        }
        else
        {
            Serial.print("Error code: ");
            Serial.println(httpResponseCode);
        }

        // Free resources
        http.end();

    delay(500);
    delay(A_Delay);
  }

  else if (content.substring(1) == "1D 07 99 43")
  {
    tone(Buz, 300);
    delay(D_Delay);
    noTone(Buz);
    if(z==1)
    {
      z=-1;
    }
    else
    {
      z=1;
    }
    	HTTPClient http;
        String url = "https://api.thingspeak.com/update?api_key=";
        url += myWriteAPIKey;
        url += "&field3=";
        url+=String(z);
        
        Serial.println("Sending HTTP GET request to: " + url);

        // Send GET request
        http.begin(url);

        int httpResponseCode = http.GET();

        if (httpResponseCode > 0)
        {
            Serial.print("HTTP Response code: ");
            Serial.println(httpResponseCode);
        }
        else
        {
            Serial.print("Error code: ");
            Serial.println(httpResponseCode);
        }

        // Free resources
        http.end();

    delay(500);
    delay(A_Delay);
  }
  
  else
  {
    Serial.println("Access denied");
    tone(Buz, 300);
    delay(D_Delay);
    noTone(Buz);
  }
}
